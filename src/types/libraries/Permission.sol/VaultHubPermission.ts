/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface VaultHubPermissionInterface extends utils.Interface {
  functions: {
    "getLabelExistPermit(address,address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "getLabelNamePermit(address,uint256,uint64,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "hasMintedPermit(address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "hasRegisterPermit(address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "initPermit(address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "mintSavePermit(address,string,string,address,address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "queryByIndexPermit(address,uint64,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "queryByNamePermit(address,address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "queryPrivateVaultAddressPermit(address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "saveWithoutMintPermit(address,string,string,address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
    "totalSavedItemsPermit(address,uint256,uint8,bytes32,bytes32,bytes32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getLabelExistPermit"
      | "getLabelNamePermit"
      | "hasMintedPermit"
      | "hasRegisterPermit"
      | "initPermit"
      | "mintSavePermit"
      | "queryByIndexPermit"
      | "queryByNamePermit"
      | "queryPrivateVaultAddressPermit"
      | "saveWithoutMintPermit"
      | "totalSavedItemsPermit"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getLabelExistPermit",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getLabelNamePermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "hasMintedPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRegisterPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "mintSavePermit",
    values: [
      string,
      string,
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "queryByIndexPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "queryByNamePermit",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "queryPrivateVaultAddressPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "saveWithoutMintPermit",
    values: [
      string,
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSavedItemsPermit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "getLabelExistPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLabelNamePermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasMintedPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasRegisterPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initPermit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintSavePermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryByIndexPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryByNamePermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryPrivateVaultAddressPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "saveWithoutMintPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSavedItemsPermit",
    data: BytesLike
  ): Result;

  events: {};
}

export interface VaultHubPermission extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: VaultHubPermissionInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getLabelExistPermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    getLabelNamePermit(
      addr: string,
      deadline: BigNumberish,
      index: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    hasMintedPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    hasRegisterPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    initPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    mintSavePermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      receiver: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    queryByIndexPermit(
      addr: string,
      index: BigNumberish,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    queryByNamePermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    queryPrivateVaultAddressPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    saveWithoutMintPermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    totalSavedItemsPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;
  };

  getLabelExistPermit(
    addr: string,
    labelHash: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  getLabelNamePermit(
    addr: string,
    deadline: BigNumberish,
    index: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  hasMintedPermit(
    addr: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  hasRegisterPermit(
    addr: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  initPermit(
    addr: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  mintSavePermit(
    addr: string,
    data: string,
    cryptoLabel: string,
    labelHash: string,
    receiver: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  queryByIndexPermit(
    addr: string,
    index: BigNumberish,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  queryByNamePermit(
    addr: string,
    labelHash: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  queryPrivateVaultAddressPermit(
    addr: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  saveWithoutMintPermit(
    addr: string,
    data: string,
    cryptoLabel: string,
    labelHash: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  totalSavedItemsPermit(
    addr: string,
    deadline: BigNumberish,
    v: BigNumberish,
    r: BytesLike,
    s: BytesLike,
    DOMAIN_SEPARATOR: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  callStatic: {
    getLabelExistPermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getLabelNamePermit(
      addr: string,
      deadline: BigNumberish,
      index: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    hasMintedPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRegisterPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    initPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    mintSavePermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      receiver: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    queryByIndexPermit(
      addr: string,
      index: BigNumberish,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    queryByNamePermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    queryPrivateVaultAddressPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    saveWithoutMintPermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    totalSavedItemsPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getLabelExistPermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLabelNamePermit(
      addr: string,
      deadline: BigNumberish,
      index: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasMintedPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasRegisterPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintSavePermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      receiver: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryByIndexPermit(
      addr: string,
      index: BigNumberish,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryByNamePermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryPrivateVaultAddressPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    saveWithoutMintPermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSavedItemsPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getLabelExistPermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLabelNamePermit(
      addr: string,
      deadline: BigNumberish,
      index: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasMintedPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasRegisterPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintSavePermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      receiver: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryByIndexPermit(
      addr: string,
      index: BigNumberish,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryByNamePermit(
      addr: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryPrivateVaultAddressPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    saveWithoutMintPermit(
      addr: string,
      data: string,
      cryptoLabel: string,
      labelHash: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSavedItemsPermit(
      addr: string,
      deadline: BigNumberish,
      v: BigNumberish,
      r: BytesLike,
      s: BytesLike,
      DOMAIN_SEPARATOR: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
