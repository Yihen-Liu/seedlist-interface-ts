/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PrivateVault, PrivateVaultInterface } from "../PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getLabelByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getLabelByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d9a380380610d9a83398101604081905261002f91610093565b600080546001600160a01b039384166001600160a01b031990911617905560018054600580546001600160401b03191690556001600160a81b031916919092161790556100c6565b80516001600160a01b038116811461008e57600080fd5b919050565b600080604083850312156100a657600080fd5b6100af83610077565b91506100bd60208401610077565b90509250929050565b610cc5806100d56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80632ddbd13a1161005b5780632ddbd13a146100d35780632ebc2fcb146101005780634f02c42014610113578063ad3d5e381461013757600080fd5b80630e15757a146100825780631bcbb1fe146100ab57806322966799146100c0575b600080fd5b6100956100903660046109b7565b61014a565b6040516100a29190610a18565b60405180910390f35b6100be6100b9366004610aee565b6102fe565b005b6100be6100ce366004610aee565b61052c565b6005546100e79067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100a2565b61009561010e366004610b52565b6106d1565b60015461012790600160a01b900460ff1681565b60405190151581526020016100a2565b6100956101453660046109b7565b6107f3565b6001546060906001600160a01b031633148061017057506000546001600160a01b031632145b6101b55760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064015b60405180910390fd5b60055467ffffffffffffffff8084169116116102135760405162461bcd60e51b815260206004820152601460248201527f4c6162656c73206b657973206f766572666c6f7700000000000000000000000060448201526064016101ac565b67ffffffffffffffff82166000908152600360209081526040808320905161023b9201610bca565b60408051601f1981840301815291815281516020928301206001600160a01b03811660009081526004909352912080549192509061027890610b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a490610b8f565b80156102f15780601f106102c6576101008083540402835291602001916102f1565b820191906000526020600020905b8154815290600101906020018083116102d457829003601f168201915b5050505050915050919050565b6001546001600160a01b031633148061032157506000546001600160a01b031632145b6103615760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064016101ac565b600154600160a01b900460ff16156103bb5760405162461bcd60e51b815260206004820152601760248201527f736565646c6973743a206d696e742068617320646f6e6500000000000000000060448201526064016101ac565b6000816040516020016103ce9190610c66565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16156104425760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b60448201526064016101ac565b6001600160a01b0381166000908152600460209081526040909120845161046b9286019061091e565b5060055467ffffffffffffffff16600090815260036020908152604090912083516104989285019061091e565b506005805467ffffffffffffffff169060006104b383610c82565b825467ffffffffffffffff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff1916600190811790915580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555050565b6001546001600160a01b031633148061054f57506000546001600160a01b031632145b61058f5760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064016101ac565b6000816040516020016105a29190610c66565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff16156106165760405162461bcd60e51b815260206004820152600f60248201526e131858995b081a185cc8195e1a5cdd608a1b60448201526064016101ac565b6001600160a01b0381166000908152600460209081526040909120845161063f9286019061091e565b5060055467ffffffffffffffff166000908152600360209081526040909120835161066c9285019061091e565b506005805467ffffffffffffffff1690600061068783610c82565b825467ffffffffffffffff9182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6001546060906001600160a01b03163314806106f757506000546001600160a01b031632145b6107375760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064016101ac565b60008260405160200161074a9190610c66565b60408051601f1981840301815291815281516020928301206001600160a01b0381166000908152600290935291205490915060ff1615156001146107d05760405162461bcd60e51b815260206004820152600e60248201527f4c6162656c206e6f20657869737400000000000000000000000000000000000060448201526064016101ac565b6001600160a01b0381166000908152600460205260409020805461027890610b8f565b6001546060906001600160a01b031633148061081957506000546001600160a01b031632145b6108595760405162461bcd60e51b815260206004820152601160248201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b60448201526064016101ac565b60055467ffffffffffffffff9081169083161061087557600080fd5b67ffffffffffffffff82166000908152600360205260409020805461089990610b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546108c590610b8f565b80156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b50505050509050919050565b82805461092a90610b8f565b90600052602060002090601f01602090048101928261094c5760008555610992565b82601f1061096557805160ff1916838001178555610992565b82800160010185558215610992579182015b82811115610992578251825591602001919060010190610977565b5061099e9291506109a2565b5090565b5b8082111561099e57600081556001016109a3565b6000602082840312156109c957600080fd5b813567ffffffffffffffff811681146109e157600080fd5b9392505050565b60005b83811015610a035781810151838201526020016109eb565b83811115610a12576000848401525b50505050565b6020815260008251806020840152610a378160408501602087016109e8565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a7257600080fd5b813567ffffffffffffffff80821115610a8d57610a8d610a4b565b604051601f8301601f19908116603f01168101908282118183101715610ab557610ab5610a4b565b81604052838152866020858801011115610ace57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b0157600080fd5b823567ffffffffffffffff80821115610b1957600080fd5b610b2586838701610a61565b93506020850135915080821115610b3b57600080fd5b50610b4885828601610a61565b9150509250929050565b600060208284031215610b6457600080fd5b813567ffffffffffffffff811115610b7b57600080fd5b610b8784828501610a61565b949350505050565b600181811c90821680610ba357607f821691505b60208210811415610bc457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680610be657607f831692505b6020808410821415610c0657634e487b7160e01b86526022600452602486fd5b818015610c1a5760018114610c2b57610c58565b60ff19861689528489019650610c58565b60008a81526020902060005b86811015610c505781548b820152908501908301610c37565b505084890196505b509498975050505050505050565b60008251610c788184602087016109e8565b9190910192915050565b600067ffffffffffffffff80831681811415610cae57634e487b7160e01b600052601160045260246000fd5b600101939250505056fea164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
