/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVaultPermission,
  PrivateVaultPermissionInterface,
} from "../../../libraries/Permission.sol/PrivateVaultPermission";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNamePermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "labelIsExistPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "labelNamePermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "updateValidatorPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610a7961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806301f8e063146100715780631046f7f91461008657806322cf42d8146100995780633b99fa80146100ac5780633eeaa953146100bf578063727faffc146100d2575b600080fd5b61008461007f36600461067e565b6100e5565b005b61008461009436600461067e565b6101af565b6100846100a73660046106f5565b610266565b6100846100ba3660046107ca565b61031d565b6100846100cd3660046106f5565b6103e7565b6100846100e03660046106f5565b610481565b4285101561010e5760405162461bcd60e51b8152600401610105906108ad565b60405180910390fd5b60405160009061014a9089908990899086907f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d98906020016108dc565b6040516020818303038152906040528051906020012090506101a588828787876040518060400160405280601e81526020017f7661756c743a696e646578206c6162656c207065726d6974204552524f520000815250610534565b5050505050505050565b428510156101cf5760405162461bcd60e51b8152600401610105906108ad565b60405160009061020b9089908990899086907fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda7906020016108dc565b6040516020818303038152906040528051906020012090506101a588828787876040518060400160405280601d81526020017f7661756c743a6c6162656c206e616d65207065726d6974204552524f52000000815250610534565b428510156102865760405162461bcd60e51b8152600401610105906108ad565b6040516000906102c29089908990899086907f79c473821b1882439e653292df5add05615ab1a78b695620f6cf37ab0fb6dbbc90602001610920565b6040516020818303038152906040528051906020012090506101a588828787876040518060400160405280601a81526020017f7661756c743a6d696e74696e67207065726d6974204552524f52000000000000815250610534565b4285101561033d5760405162461bcd60e51b8152600401610105906108ad565b60405160009061037f908c908c908c908c908c908c9089907f0146fc630af018bd01051793691b73d73b34e7977f68c1f081ed623cd3c2ab449060200161098b565b6040516020818303038152906040528051906020012090506103da8b828787876040518060400160405280601a81526020017f7661756c743a6d696e74696e67207065726d6974204552524f52000000000000815250610534565b5050505050505050505050565b428510156104075760405162461bcd60e51b8152600401610105906108ad565b6040516000906104439089908990899086907f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d90602001610920565b6040516020818303038152906040528051906020012090506101a58882878787604051806060016040528060238152602001610a4a60239139610534565b428510156104a15760405162461bcd60e51b8152600401610105906108ad565b6040516000906104dd9089908990899086907f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f90602001610920565b6040516020818303038152906040528051906020012090506101a588828787876040518060400160405280601e81526020017f7661756c743a6c6162656c206578697374207065726d6974204552524f5200008152505b60008560405160200161054991815260200190565b6040516020818303038152906040528051906020012090506000816040516020016105a091907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff891691830191909152606082018790526080820186905291506001600160a01b0389169060019060a0016020604051602081039080840390855afa158015610613573d6000803e3d6000fd5b505050602060405103516001600160a01b03161483906106465760405162461bcd60e51b81526004016101059190610a16565b505050505050505050565b80356001600160a01b038116811461066857600080fd5b919050565b803560ff8116811461066857600080fd5b600080600080600080600060e0888a03121561069957600080fd5b6106a288610651565b9650602088013567ffffffffffffffff811681146106bf57600080fd5b9550604088013594506106d46060890161066d565b9699959850939660808101359560a0820135955060c0909101359350915050565b600080600080600080600060e0888a03121561071057600080fd5b61071988610651565b96506106bf60208901610651565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261074e57600080fd5b813567ffffffffffffffff8082111561076957610769610727565b604051601f8301601f19908116603f0116810190828211818310171561079157610791610727565b816040528381528660208588010111156107aa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000806101408b8d0312156107ea57600080fd5b6107f38b610651565b995060208b013567ffffffffffffffff8082111561081057600080fd5b61081c8e838f0161073d565b9a5060408d013591508082111561083257600080fd5b61083e8e838f0161073d565b995060608d013591508082111561085457600080fd5b506108618d828e0161073d565b97505061087060808c01610651565b955060a08b0135945061088560c08c0161066d565b935060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b6020808252601590820152741d985d5b1d0e995e1958dd5d19481d1a5b595bdd5d605a1b604082015260600190565b60609590951b6bffffffffffffffffffffffff1916855260c09390931b6001600160c01b0319166014850152601c840191909152603c830152605c820152607c0190565b6bffffffffffffffffffffffff19606096871b811682529490951b909316601485015260288401919091526048830152606882015260880190565b60005b8381101561097657818101518382015260200161095e565b83811115610985576000848401525b50505050565b60006bffffffffffffffffffffffff19808b60601b16835289516109b6816014860160208e0161095b565b8951908401906109cd816014840160208e0161095b565b89519101906109e3816014840160208d0161095b565b60609890981b91909116960160148101969096525050602884019290925260488301526068820152608801949350505050565b6020815260008251806020840152610a3581604085016020870161095b565b601f01601f1916919091016040019291505056fe7661756c743a6765742064617461206279206e616d65207065726d6974204552524f52a164736f6c634300080c000a";

type PrivateVaultPermissionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultPermissionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVaultPermission__factory extends ContractFactory {
  constructor(...args: PrivateVaultPermissionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVaultPermission> {
    return super.deploy(overrides || {}) as Promise<PrivateVaultPermission>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PrivateVaultPermission {
    return super.attach(address) as PrivateVaultPermission;
  }
  override connect(signer: Signer): PrivateVaultPermission__factory {
    return super.connect(signer) as PrivateVaultPermission__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultPermissionInterface {
    return new utils.Interface(_abi) as PrivateVaultPermissionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVaultPermission {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrivateVaultPermission;
  }
}
