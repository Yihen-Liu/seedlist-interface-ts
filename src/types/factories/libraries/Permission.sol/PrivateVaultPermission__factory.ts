/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVaultPermission,
  PrivateVaultPermissionInterface,
} from "../../../libraries/Permission.sol/PrivateVaultPermission";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNamePermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "labelIsExistPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "labelNamePermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "DOMAIN_SEPARATOR",
        type: "bytes32",
      },
    ],
    name: "updateValidatorPermit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610a9261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806301f8e063146100715780631046f7f91461008657806322cf42d8146100995780633b99fa80146100ac5780633eeaa953146100bf578063727faffc146100d2575b600080fd5b61008461007f36600461065e565b6100e5565b005b61008461009436600461065e565b6101a3565b6100846100a73660046106d5565b61024d565b6100846100ba3660046107f3565b6102fb565b6100846100cd3660046106d5565b6103c2565b6100846100e03660046106d5565b61046d565b4285101561010e5760405162461bcd60e51b8152600401610105906108f2565b60405180910390fd5b60405160009061014a9089908990899086907f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d9890602001610921565b6040516020818303038152906040528051906020012090506101998882878787604051806040016040528060118152602001701d985d5b1d0e9a5b99195e081b1858995b607a1b815250610514565b5050505050505050565b428510156101c35760405162461bcd60e51b8152600401610105906108f2565b6040516000906101ff9089908990899086907fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda790602001610921565b60405160208183030381529060405280519060200120905061019988828787876040518060400160405280601081526020016f7661756c743a6c6162656c206e616d6560801b815250610514565b4285101561026d5760405162461bcd60e51b8152600401610105906108f2565b6040516000906102a99089908990899086907f79c473821b1882439e653292df5add05615ab1a78b695620f6cf37ab0fb6dbbc90602001610965565b6040516020818303038152906040528051906020012090506101998882878787604051806040016040528060148152602001731d985d5b1d0e9b5a5b9d1a5b99c81c195c9b5a5d60621b815250610514565b4285101561031b5760405162461bcd60e51b8152600401610105906108f2565b604051600090610361908e908e908e908e908e908e908e908e908b907fb5874d5c3f6f8ad0eddae31287a8b0ff49e374249cd2389616fb828f06f42f63906020016109d0565b6040516020818303038152906040528051906020012090506103b38d82878787604051806040016040528060148152602001731d985d5b1d0e9b5a5b9d1a5b99c81c195c9b5a5d60621b815250610514565b50505050505050505050505050565b428510156103e25760405162461bcd60e51b8152600401610105906108f2565b60405160009061041e9089908990899086907f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d90602001610965565b6040516020818303038152906040528051906020012090506101998882878787604051806040016040528060118152602001707661756c743a676574206279206e616d6560781b815250610514565b4285101561048d5760405162461bcd60e51b8152600401610105906108f2565b6040516000906104c99089908990899086907f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f90602001610965565b6040516020818303038152906040528051906020012090506101998882878787604051806040016040528060118152602001701d985d5b1d0e9b1858995b08195e1a5cdd607a1b8152505b60008560405160200161052991815260200190565b60405160208183030381529060405280519060200120905060008160405160200161058091907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff891691830191909152606082018790526080820186905291506001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156105f3573d6000803e3d6000fd5b505050602060405103516001600160a01b03161483906106265760405162461bcd60e51b81526004016101059190610a52565b505050505050505050565b80356001600160a01b038116811461064857600080fd5b919050565b803560ff8116811461064857600080fd5b600080600080600080600060e0888a03121561067957600080fd5b61068288610631565b9650602088013567ffffffffffffffff8116811461069f57600080fd5b9550604088013594506106b46060890161064d565b9699959850939660808101359560a0820135955060c0909101359350915050565b600080600080600080600060e0888a0312156106f057600080fd5b6106f988610631565b965061069f60208901610631565b60008083601f84011261071957600080fd5b50813567ffffffffffffffff81111561073157600080fd5b60208301915083602082850101111561074957600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261077757600080fd5b813567ffffffffffffffff8082111561079257610792610750565b604051601f8301601f19908116603f011681019082821181831017156107ba576107ba610750565b816040528381528660208588010111156107d357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000806000806101408d8f03121561081657600080fd5b61081f8d610631565b9b5067ffffffffffffffff60208e0135111561083a57600080fd5b61084a8e60208f01358f01610707565b909b50995067ffffffffffffffff60408e0135111561086857600080fd5b6108788e60408f01358f01610707565b909950975067ffffffffffffffff60608e0135111561089657600080fd5b6108a68e60608f01358f01610766565b96506108b460808e01610631565b955060a08d013594506108c960c08e0161064d565b935060e08d013592506101008d013591506101208d013590509295989b509295989b509295989b565b6020808252601590820152741d985d5b1d0e995e1958dd5d19481d1a5b595bdd5d605a1b604082015260600190565b60609590951b6bffffffffffffffffffffffff1916855260c09390931b6001600160c01b0319166014850152601c840191909152603c830152605c820152607c0190565b6bffffffffffffffffffffffff19606096871b811682529490951b909316601485015260288401919091526048830152606882015260880190565b60005b838110156109bb5781810151838201526020016109a3565b838111156109ca576000848401525b50505050565b60006bffffffffffffffffffffffff19808d60601b1683528a8c60148501378a830160148101600081528a8c823750898101905060148101600081528951610a1c818360208e016109a0565b60609990991b92909216970160148101979097525050506028840192909252604883015260688201526088019695505050505050565b6020815260008251806020840152610a718160408501602087016109a0565b601f01601f1916919091016040019291505056fea164736f6c634300080c000a";

type PrivateVaultPermissionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultPermissionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVaultPermission__factory extends ContractFactory {
  constructor(...args: PrivateVaultPermissionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVaultPermission> {
    return super.deploy(overrides || {}) as Promise<PrivateVaultPermission>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PrivateVaultPermission {
    return super.attach(address) as PrivateVaultPermission;
  }
  override connect(signer: Signer): PrivateVaultPermission__factory {
    return super.connect(signer) as PrivateVaultPermission__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultPermissionInterface {
    return new utils.Interface(_abi) as PrivateVaultPermissionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVaultPermission {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrivateVaultPermission;
  }
}
