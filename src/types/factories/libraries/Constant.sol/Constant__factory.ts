/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Constant,
  ConstantInterface,
} from "../../../libraries/Constant.sol/Constant";

const _abi = [
  {
    inputs: [],
    name: "PRIVATE_DOMAIN_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_DOMAIN_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_DOMAIN_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_GET_PRIVATE_DATA_BY_INDEX_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_GET_PRIVATE_DATA_BY_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_LABEL_EXIST_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_LABEL_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_SAVE_WITHOUT_MINTING_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_UPDATE_VALIDATOR_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_DOMAIN_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_DOMAIN_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_DOMAIN_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_GET_LABEL_NAME_BY_INDEX_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_HAS_MINTED_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_INDEX_QUERY_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_INIT_VAULT_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_LABEL_EXIST_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_MINT_SAVE_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_NAME_QUERY_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_QUERY_PRIVATE_VAULT_ADDRESS_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_SAVE_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_TOTAL_SAVED_ITEMS_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULTHUB_VAULT_HAS_REGISTER_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61055561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101555760003560e01c8063645ca4bb116100cd5780638353461b116100865780638353461b14610430578063c1fe536514610457578063ce93a6ad1461047e578063dda5a8c7146104a5578063e0b6f6e514610230578063e5bf18dc146104cc57600080fd5b8063645ca4bb146103395780636c47b86f1461036d57806370aae61314610394578063731f9e6c146103bb57806378b3859e146103e25780637f3ae1ef1461040957600080fd5b80630ddd56151161011f5780630ddd56151461023057806312acb9721461026157806317688b85146102885780632689eacd146102af5780632990395a146102d65780632bafa9a71461031257600080fd5b8062740f641461015a578062afc4ed146101945780630414832c146101bb57806308e97072146101e25780630ce95df314610209575b600080fd5b6101817fe4f65c557ffdb3934e9fffd9af8d365eca51b20601a53082ce10b1e0ac04461f81565b6040519081526020015b60405180910390f35b6101817fac1275bd89417f307b1ae27de4967e4910dfab4abd173eb3e6a3352c21ae42fe81565b6101817f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d81565b6101817f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d9881565b6101817fef93604cd5c5e7d35e7ef7d38e1cac9e1cc450e49bc931effd1f65a5a993121d81565b610254604051806040016040528060058152602001640312e302e360dc1b81525081565b60405161018b91906104f3565b6101817f21b7e085fb49739c78b83ddb0a8a7e4b469211d08958f57d52ff68325943de0481565b6101817f0146fc630af018bd01051793691b73d73b34e7977f68c1f081ed623cd3c2ab4481565b6101817fab4ac209d4a97678c29d0f2f4ef3539a24e0ce6dbd2dd481c818134b61d28ecc81565b6102546040518060400160405280601981526020017f707269766174655661756c7440736565646c6973742e6f72670000000000000081525081565b6101817f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f81565b610254604051806040016040528060158152602001747661756c7468756240736565646c6973742e6f726760581b81525081565b6101817fbd5bc3ca2c7ea773b900edfe638ad04ce3697bf85885abdbe90a2f7c1266d9ee81565b6101817fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda781565b6101817ff65e93839555276acb1b1c33eb49dff5fa6a88c6991b9b84b680dc961b85f84781565b6101817f6c055b4eb43bcfe637041a3adda3d9f2b05d93fc3a54fc8c978e7d0d95e35b6681565b6101817fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e81565b6101817fdbd66a895de1fdf2e44b84c83cf1e4f482f647eb80397d069bf7763a583ce1a581565b6101817f79c473821b1882439e653292df5add05615ab1a78b695620f6cf37ab0fb6dbbc81565b6101817fbcb00634c612072a661bb64fa073e7806d31f3790f1c827cd20f95542b5af67981565b6101817f25f3fe064ef39028ecb8ad22c47a4f382a81ca1f21d802b4fdb8c3e213b9df7281565b6101817f5a14c87645febe5840f128409acb12772ff89f3398b05142d7e039c76e0844e881565b600060208083528351808285015260005b8181101561052057858101830151858201604001528201610504565b81811115610532576000604083870101525b50601f01601f191692909201604001939250505056fea164736f6c634300080c000a";

type ConstantConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constant__factory extends ContractFactory {
  constructor(...args: ConstantConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Constant> {
    return super.deploy(overrides || {}) as Promise<Constant>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Constant {
    return super.attach(address) as Constant;
  }
  override connect(signer: Signer): Constant__factory {
    return super.connect(signer) as Constant__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantInterface {
    return new utils.Interface(_abi) as ConstantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constant {
    return new Contract(address, _abi, signerOrProvider) as Constant;
  }
}
