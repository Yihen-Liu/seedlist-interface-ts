/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Strings, StringsInterface } from "../Strings";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addressToAsciiString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "b",
        type: "bytes1",
      },
    ],
    name: "char",
    outputs: [
      {
        internalType: "bytes1",
        name: "c",
        type: "bytes1",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "fromAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bytes",
        type: "bytes",
      },
    ],
    name: "fromBytes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "fromBytes32",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "toBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61093561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80637d3d11d0116100655780637d3d11d0146101385780639f2e140e14610097578063a9ead91c1461014b578063b72e717d1461015e57600080fd5b8063215b3e321461009757806327df8f2a146100be5780634c0999c7146100e157806369f9ad2f146100f4575b600080fd5b6100a86100a53660046105ac565b90565b6040516100b5919061064a565b60405180910390f35b6100d36100cc3660046105ac565b6020015190565b6040519081526020016100b5565b6100a86100ef36600461065d565b610171565b610107610102366004610676565b6101fa565b6040517fff0000000000000000000000000000000000000000000000000000000000000090911681526020016100b5565b6100a861014636600461065d565b610230565b6100a86101593660046106b8565b610244565b6100a861016c3660046106b8565b610391565b6040805160208082528183019092526060916000919060208201818036833701905050905060005b60208110156101f3578381602081106101b4576101b46106ee565b1a60f81b8282815181106101ca576101ca6106ee565b60200101906001600160f81b031916908160001a905350806101eb8161071a565b915050610199565b5092915050565b6000600a60f883901c10156102215761021860f883901c6030610735565b60f81b92915050565b61021860f883901c6057610735565b6060600061023d83610171565b9392505050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b60148110156101f357600061028182601361075a565b61028c906008610771565b610297906002610874565b6102b79073ffffffffffffffffffffffffffffffffffffffff8716610896565b60f81b9050600060108260f81c6102ce91906108aa565b60f81b905060008160f81c60106102e591906108cc565b8360f81c6102f391906108ed565b60f81b9050610301826101fa565b8561030d866002610771565b8151811061031d5761031d6106ee565b60200101906001600160f81b031916908160001a90535061033d816101fa565b85610349866002610771565b610354906001610910565b81518110610364576103646106ee565b60200101906001600160f81b031916908160001a90535050505080806103899061071a565b91505061026b565b6040805180820182526002815261060f60f31b602080830191825283518085018552600080825290820152835180850190945291518352908201526060906104119061040c6103df85610244565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b610417565b92915050565b8051825160609160009161042b9190610910565b67ffffffffffffffff81111561044357610443610520565b6040519080825280601f01601f19166020018201604052801561046d576020820181803683370190505b509050600060208201905061048b81866020015187600001516104af565b84516104a79061049b9083610910565b602086015186516104af565b509392505050565b602081106104e757815183526104c6602084610910565b92506104d3602083610910565b91506104e060208261075a565b90506104af565b600060016104f683602061075a565b61050290610100610874565b61050c919061075a565b925184518416931916929092179092525050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561055157610551610520565b604051601f8501601f19908116603f0116810190828211818310171561057957610579610520565b8160405280935085815286868601111561059257600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156105be57600080fd5b813567ffffffffffffffff8111156105d557600080fd5b8201601f810184136105e657600080fd5b6105f584823560208401610536565b949350505050565b6000815180845260005b8181101561062357602081850181015186830182015201610607565b81811115610635576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061023d60208301846105fd565b60006020828403121561066f57600080fd5b5035919050565b60006020828403121561068857600080fd5b81357fff000000000000000000000000000000000000000000000000000000000000008116811461023d57600080fd5b6000602082840312156106ca57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461023d57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561072e5761072e610704565b5060010190565b600060ff821660ff84168060ff0382111561075257610752610704565b019392505050565b60008282101561076c5761076c610704565b500390565b600081600019048311821515161561078b5761078b610704565b500290565b600181815b808511156107cb5781600019048211156107b1576107b1610704565b808516156107be57918102915b93841c9390800290610795565b509250929050565b6000826107e257506001610411565b816107ef57506000610411565b8160018114610805576002811461080f5761082b565b6001915050610411565b60ff84111561082057610820610704565b50506001821b610411565b5060208310610133831016604e8410600b841016171561084e575081810a610411565b6108588383610790565b806000190482111561086c5761086c610704565b029392505050565b600061023d83836107d3565b634e487b7160e01b600052601260045260246000fd5b6000826108a5576108a5610880565b500490565b600060ff8316806108bd576108bd610880565b8060ff84160491505092915050565b600060ff821660ff84168160ff048111821515161561086c5761086c610704565b600060ff821660ff84168082101561090757610907610704565b90039392505050565b6000821982111561092357610923610704565b50019056fea164736f6c634300080c000a";

type StringsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Strings__factory extends ContractFactory {
  constructor(...args: StringsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Strings";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Strings> {
    return super.deploy(overrides || {}) as Promise<Strings>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Strings {
    return super.attach(address) as Strings;
  }
  connect(signer: Signer): Strings__factory {
    return super.connect(signer) as Strings__factory;
  }
  static readonly contractName: "Strings";
  public readonly contractName: "Strings";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringsInterface {
    return new utils.Interface(_abi) as StringsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Strings {
    return new Contract(address, _abi, signerOrProvider) as Strings;
  }
}
