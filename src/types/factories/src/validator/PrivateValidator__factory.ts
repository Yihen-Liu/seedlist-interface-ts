/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateValidator,
  PrivateValidatorInterface,
} from "../../../src/validator/PrivateValidator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "isValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWorker",
        type: "address",
      },
    ],
    name: "updateWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b031916905534801561002057600080fd5b50600180546001600160a01b031916331790556104f6806100426000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630a03e7381461005c5780634d547ada1461008457806380e4cc9d146100af5780638da5cb5b146100c4578063f2fde38b146100d7575b600080fd5b61006f61006a366004610343565b6100ea565b60405190151581526020015b60405180910390f35b600054610097906001600160a01b031681565b6040516001600160a01b03909116815260200161007b565b6100c26100bd36600461040c565b610199565b005b600154610097906001600160a01b031681565b6100c26100e536600461040c565b610269565b600080546001600160a01b031661010357506001919050565b6000808380602001905181019061011a9190610430565b600054604051633a27652360e01b81529294509092506001600160a01b031690633a2765239061014e908790600401610472565b6020604051808303816000875af115801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906104c7565b949350505050565b6001546001600160a01b031633146101f85760405162461bcd60e51b815260206004820152601760248201527f56616c696461746f723a206175746820696e76616c696400000000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166102475760405162461bcd60e51b815260206004820152601660248201527556616c696461746f723a5a45524f206164647265737360501b60448201526064016101ef565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102bc5760405162461bcd60e51b815260206004820152601660248201527515985b1a59185d1bdc8e985d5d1a081a5b9d985b1a5960521b60448201526064016101ef565b6001600160a01b03811661030b5760405162461bcd60e51b815260206004820152601660248201527556616c696461746f723a5a45524f206164647265737360501b60448201526064016101ef565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561035557600080fd5b813567ffffffffffffffff8082111561036d57600080fd5b818401915084601f83011261038157600080fd5b8135818111156103935761039361032d565b604051601f8201601f19908116603f011681019083821181831017156103bb576103bb61032d565b816040528281528760208487010111156103d457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6001600160a01b038116811461040957600080fd5b50565b60006020828403121561041e57600080fd5b8135610429816103f4565b9392505050565b6000806040838503121561044357600080fd5b825161044e816103f4565b602084015190925062ffffff8116811461046757600080fd5b809150509250929050565b600060208083528351808285015260005b8181101561049f57858101830151858201604001528201610483565b818111156104b1576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156104d957600080fd5b8151801515811461042957600080fdfea164736f6c634300080c000a";

type PrivateValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateValidator__factory extends ContractFactory {
  constructor(...args: PrivateValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateValidator> {
    return super.deploy(overrides || {}) as Promise<PrivateValidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PrivateValidator {
    return super.attach(address) as PrivateValidator;
  }
  override connect(signer: Signer): PrivateValidator__factory {
    return super.connect(signer) as PrivateValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateValidatorInterface {
    return new utils.Interface(_abi) as PrivateValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateValidator {
    return new Contract(address, _abi, signerOrProvider) as PrivateValidator;
  }
}
