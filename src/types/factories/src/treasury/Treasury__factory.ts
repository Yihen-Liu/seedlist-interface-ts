/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Treasury,
  TreasuryInterface,
} from "../../../src/treasury/Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_seed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "callable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycle",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableHalf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastWithdrawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "setCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setHalf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawCnt",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000600355600480546001600160481b03191690556a131b9d825c4aa46d8000006005556871d75ab9b920500000600655680b6255df5f500800006007556008805461ffff1916905534801561005957600080fd5b50604051610cdb380380610cdb833981016040819052610078916100b3565b600280546001600160a01b039092166001600160a01b031992831617905560008054909116331790556001805460ff60a01b191690556100e3565b6000602082840312156100c557600080fd5b81516001600160a01b03811681146100dc57600080fd5b9392505050565b610be9806100f26000396000f3fe6080604052600436106100e15760003560e01c80638f2ad4cb1161007f578063c6f9e40c11610059578063c6f9e40c14610289578063d9caed12146102aa578063f2fde38b146102ca578063fc9c8d39146102ea57600080fd5b80638f2ad4cb14610231578063b831461e14610251578063beb92f551461026757600080fd5b806367b730f5116100bb57806367b730f5146101885780636a2ab602146101c25780636a627842146101e35780638da5cb5b1461021157600080fd5b8063311f8483146100ed5780634782f7791461012a5780636190c9d51461015a57600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5060025461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014a610145366004610a39565b61030a565b6040519015158152602001610121565b34801561016657600080fd5b506008546101759061ffff1681565b60405161ffff9091168152602001610121565b34801561019457600080fd5b506004546101a99067ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610121565b3480156101ce57600080fd5b5060015461014a90600160a01b900460ff1681565b3480156101ef57600080fd5b506102036101fe366004610a65565b61037e565b604051908152602001610121565b34801561021d57600080fd5b5060005461010d906001600160a01b031681565b34801561023d57600080fd5b5061014a61024c366004610a90565b610657565b34801561025d57600080fd5b5061020360035481565b34801561027357600080fd5b50610287610282366004610a65565b6106a8565b005b34801561029557600080fd5b5060045461014a90600160401b900460ff1681565b3480156102b657600080fd5b5061014a6102c5366004610aad565b6106f9565b3480156102d657600080fd5b506102876102e5366004610a65565b610986565b3480156102f657600080fd5b5060015461010d906001600160a01b031681565b600080546001600160a01b0316331461033e5760405162461bcd60e51b815260040161033590610aee565b60405180910390fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610374573d6000803e3d6000fd5b5060019392505050565b60018054600091600160a01b90910460ff161515146103df5760405162461bcd60e51b815260206004820152601b60248201527f54726561737572793a2063616c6c657220697320696e76616c696400000000006044820152606401610335565b6001546001600160a01b031633146104395760405162461bcd60e51b815260206004820152601c60248201527f54726561737572793a206f6e6c792063616c6c65722063616e20646f000000006044820152606401610335565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a79190610b25565b60085460055491925061ffff16906104bf9083610b54565b11156104ee576008546104d79061ffff166001610b76565b6008805461ffff191661ffff929092169190911790555b60085460075461ffff9091161c61053d5760405162461bcd60e51b8152602060048201526013602482015272054726561737572793a206d696e742073746f7606c1b6044820152606401610335565b6002546008546007546040516340c10f1960e01b815230600482015261ffff9092161c60248201526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610b9c565b506002546008546006546040516340c10f1960e01b81526001600160a01b03878116600483015261ffff9093169190911c60248201529116906340c10f19906044016020604051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610b9c565b505060085460065461ffff9091161c92915050565b600080546001600160a01b031633146106825760405162461bcd60e51b815260040161033590610aee565b5060048054821515600160401b0268ff0000000000000000199091161790556001919050565b6000546001600160a01b031633146106d25760405162461bcd60e51b815260040161033590610aee565b600180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b600080546001600160a01b031633146107245760405162461bcd60e51b815260040161033590610aee565b6001600160a01b0384161580159061074457506001600160a01b03831615155b6107895760405162461bcd60e51b815260206004820152601660248201527554726561737572793a205a45524f204144445245535360501b6044820152606401610335565b6002546001600160a01b0384811691161480156107b45750600454600160401b900460ff1615156001145b1561084e5760045467ffffffffffffffff16158015906107d45750600354155b156107e15750600061097f565b60045467ffffffffffffffff1615801590610800575060035460011c82115b1561080e5760035460011c91505b600382905560045461082b9067ffffffffffffffff166001610bb9565b6004805467ffffffffffffffff191667ffffffffffffffff929092169190911790555b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190610b25565b10156109065760405162461bcd60e51b815260206004820152601860248201527f54726561737572793a20616d6f756e7420696e76616c696400000000000000006044820152606401610335565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610b9c565b50600190505b9392505050565b6000546001600160a01b031633146109b05760405162461bcd60e51b815260040161033590610aee565b6001600160a01b0381166109ff5760405162461bcd60e51b815260206004820152601660248201527554726561737572793a205a45524f204144445245535360501b6044820152606401610335565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114610a3657600080fd5b50565b60008060408385031215610a4c57600080fd5b8235610a5781610a21565b946020939093013593505050565b600060208284031215610a7757600080fd5b813561097f81610a21565b8015158114610a3657600080fd5b600060208284031215610aa257600080fd5b813561097f81610a82565b600080600060608486031215610ac257600080fd5b8335610acd81610a21565b92506020840135610add81610a21565b929592945050506040919091013590565b6020808252601b908201527f54726561737572793a206f6e6c79206f776e65722063616e20646f0000000000604082015260600190565b600060208284031215610b3757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082610b7157634e487b7160e01b600052601260045260246000fd5b500490565b600061ffff808316818516808303821115610b9357610b93610b3e565b01949350505050565b600060208284031215610bae57600080fd5b815161097f81610a82565b600067ffffffffffffffff808316818516808303821115610b9357610b93610b3e56fea164736f6c634300080c000a";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _seed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(_seed, overrides || {}) as Promise<Treasury>;
  }
  override getDeployTransaction(
    _seed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_seed, overrides || {});
  }
  override attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  override connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
