/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeedToken,
  SeedTokenInterface,
} from "../../../../src/treasury/Seed.sol/SeedToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601081526f536565646c697374204e6574776f726b60801b60208083019182528351808501909452600484526314d9595960e21b9084015281519192916200006691600591620000b1565b5080516200007c906006906020840190620000b1565b50506007805460ff1916601217905550600080546001600160a01b031916331790556001805460ff60a01b1916905562000194565b828054620000bf9062000157565b90600052602060002090601f016020900481019282620000e357600085556200012e565b82601f10620000fe57805160ff19168380011785556200012e565b828001600101855582156200012e579182015b828111156200012e57825182559160200191906001019062000111565b506200013c92915062000140565b5090565b5b808211156200013c576000815560010162000141565b600181811c908216806200016c57607f821691505b602082108114156200018e57634e487b7160e01b600052602260045260246000fd5b50919050565b610d7e80620001a46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f02c420116100a2578063a457c2d711610071578063a457c2d714610234578063a9059cbb14610247578063dd62ed3e1461025a578063f2fde38b14610293578063fca3b5aa146102a857600080fd5b80634f02c420146101dc57806370a08231146101f05780638da5cb5b1461021957806395d89b411461022c57600080fd5b806323b872dd116100de57806323b872dd1461018e578063313ce567146101a157806339509351146101b657806340c10f19146101c957600080fd5b806306fdde0314610110578063075461721461012e578063095ea7b31461015957806318160ddd1461017c575b600080fd5b6101186102bb565b6040516101259190610b59565b60405180910390f35b600154610141906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b61016c610167366004610bca565b61034d565b6040519015158152602001610125565b6004545b604051908152602001610125565b61016c61019c366004610bf4565b610363565b60075460405160ff9091168152602001610125565b61016c6101c4366004610bca565b6103cc565b61016c6101d7366004610bca565b610402565b60015461016c90600160a01b900460ff1681565b6101806101fe366004610c30565b6001600160a01b031660009081526002602052604090205490565b600054610141906001600160a01b031681565b6101186104cc565b61016c610242366004610bca565b6104db565b61016c610255366004610bca565b61052a565b610180610268366004610c4b565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102a66102a1366004610c30565b610537565b005b6102a66102b6366004610c30565b6105fe565b6060600580546102ca90610c7e565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610c7e565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b600061035a3384846106cd565b50600192915050565b60006103708484846107f2565b6103c284336103bd85604051806060016040528060288152602001610d25602891396001600160a01b038a1660009081526003602090815260408083203384529091529020549190610978565b6106cd565b5060019392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161035a9185906103bd90866109af565b60018054600091600160a01b90910460ff161515146104685760405162461bcd60e51b815260206004820152601760248201527f536565643a206d696e74656420697320696e76616c696400000000000000000060448201526064015b60405180910390fd5b6001546001600160a01b031633146104c25760405162461bcd60e51b815260206004820152601b60248201527f536565643a206f6e6c79204d696e7465722063616e20646f2069740000000000604482015260640161045f565b61035a8383610a15565b6060600680546102ca90610c7e565b600061035a33846103bd85604051806060016040528060258152602001610d4d602591393360009081526003602090815260408083206001600160a01b038d1684529091529020549190610978565b600061035a3384846107f2565b6000546001600160a01b031633146105915760405162461bcd60e51b815260206004820152601a60248201527f536565643a206f6e6c79206f776e65722063616e20646f206974000000000000604482015260640161045f565b6001600160a01b0381166105dc5760405162461bcd60e51b8152602060048201526012602482015271536565643a205a45524f204144445245535360701b604482015260640161045f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106585760405162461bcd60e51b815260206004820152601a60248201527f536565643a206f6e6c79206f776e65722063616e20646f206974000000000000604482015260640161045f565b6001600160a01b0381166106a65760405162461bcd60e51b8152602060048201526015602482015274536565643a2061646472657373206973205a45524f60581b604482015260640161045f565b600180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b6001600160a01b03831661072f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045f565b6001600160a01b0382166107905760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045f565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108565760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161045f565b6001600160a01b0382166108b85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045f565b6108f581604051806060016040528060268152602001610cff602691396001600160a01b0386166000908152600260205260409020549190610978565b6001600160a01b03808516600090815260026020526040808220939093559084168152205461092490826109af565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107e59085815260200190565b6000818484111561099c5760405162461bcd60e51b815260040161045f9190610b59565b506109a78385610ccf565b949350505050565b6000806109bc8385610ce6565b905083811015610a0e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161045f565b9392505050565b6001600160a01b038216610a6b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045f565b6b051355d6a083d3ad160000006004541115610ac95760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20617272697665206174206d617820737570706c790000000000604482015260640161045f565b600454610ad690826109af565b6004556001600160a01b038216600090815260026020526040902054610afc90826109af565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b4d9085815260200190565b60405180910390a35050565b600060208083528351808285015260005b81811015610b8657858101830151858201604001528201610b6a565b81811115610b98576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bc557600080fd5b919050565b60008060408385031215610bdd57600080fd5b610be683610bae565b946020939093013593505050565b600080600060608486031215610c0957600080fd5b610c1284610bae565b9250610c2060208501610bae565b9150604084013590509250925092565b600060208284031215610c4257600080fd5b610a0e82610bae565b60008060408385031215610c5e57600080fd5b610c6783610bae565b9150610c7560208401610bae565b90509250929050565b600181811c90821680610c9257607f821691505b60208210811415610cb357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610ce157610ce1610cb9565b500390565b60008219821115610cf957610cf9610cb9565b50019056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c634300080c000a";

type SeedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeedToken__factory extends ContractFactory {
  constructor(...args: SeedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeedToken> {
    return super.deploy(overrides || {}) as Promise<SeedToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SeedToken {
    return super.attach(address) as SeedToken;
  }
  override connect(signer: Signer): SeedToken__factory {
    return super.connect(signer) as SeedToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeedTokenInterface {
    return new utils.Interface(_abi) as SeedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeedToken {
    return new Contract(address, _abi, signerOrProvider) as SeedToken;
  }
}
