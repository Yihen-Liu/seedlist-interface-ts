/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVault,
  PrivateVaultInterface,
} from "../../../src/vaults/PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_permissionLib",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getPrivateDataByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
    ],
    name: "getPrivateDataByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "labelIsExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelIsExistDirectly",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bda38038062001bda8339810160408190526200003491620001a6565b604080518082018252601981527f707269766174655661756c7440736565646c6973742e6f7267000000000000006020918201528151808301835260058152640312e302e360dc1b9082015281517fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e818301527f524897c45a2b08b64fa5a5db0ba55d51bd9bba5ea1fb261f9101b9f6b46f193f818401527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600955600080546001600160a01b03199081166001600160a01b039687161790915560028054821694861694909417909355600180549093169184169190911790915560038054600880546001600160401b0319169055919092166001600160a81b031990911617905562000203565b80516001600160a01b0381168114620001a157600080fd5b919050565b60008060008060808587031215620001bd57600080fd5b620001c88562000189565b9350620001d86020860162000189565b9250620001e86040860162000189565b9150620001f86060860162000189565b905092959194509250565b6119c780620002136000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063653045eb11610097578063c4dfc5ad11610066578063c4dfc5ad1461022a578063d866517f1461023d578063f156b1bf14610250578063fc9c8d391461026357600080fd5b8063653045eb146101de57806373b26be3146101f1578063ad3d5e3814610204578063b5802dad1461021757600080fd5b80633644e515116100d35780633644e515146101805780634a8bb379146101975780634f02c420146101b75780635a724e27146101cb57600080fd5b806301335ffd146101055780631c8ff5201461012d57806327513b70146101425780632ddbd13a14610155575b600080fd5b610118610113366004611497565b61028e565b60405190151581526020015b60405180910390f35b61014061013b366004611587565b6103a4565b005b610140610150366004611587565b610547565b600854610168906001600160401b031681565b6040516001600160401b039091168152602001610124565b61018960095481565b604051908152602001610124565b6101aa6101a5366004611611565b610687565b604051610124919061168e565b60035461011890600160a01b900460ff1681565b6101aa6101d9366004611611565b61088c565b6101aa6101ec366004611497565b6109c5565b6101aa6101ff3660046116a8565b610b31565b6101aa6102123660046116c3565b610c6b565b6101186102253660046116a8565b610cec565b6101aa6102383660046116c3565b610d38565b61014061024b3660046116de565b610dfb565b61014061025e3660046116de565b6110b7565b600254610276906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b60035460008054600954604051929384936001600160a01b0391821693631c9febff60e21b936102cf93909116918c918c918c918c918c919060240161177f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161030d91906117c0565b600060405180830381855afa9150503d8060008114610348576040519150601f19603f3d011682016040523d82523d6000602084013e61034d565b606091505b509091505060018115151461037d5760405162461bcd60e51b8152600401610374906117dc565b60405180910390fd5b50506001600160a01b03851660009081526004602052604090205460ff1695945050505050565b6002546001600160a01b031633146103ce5760405162461bcd60e51b81526004016103749061180a565b600354600160a01b900460ff161561041e5760405162461bcd60e51b81526020600482015260136024820152727661756c743a6d696e742068617320646f6e6560681b6044820152606401610374565b6001600160a01b03811660009081526004602052604090205460ff16156104575760405162461bcd60e51b815260040161037490611841565b6001600160a01b03811660009081526007602090815260409091208451610480928601906113d6565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b03861690811790915583526006825290912083516104d1928501906113d6565b50600880546001600160401b03169060006104eb83611870565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600460205260409020805460ff1916600117905550506003805460ff60a01b1916600160a01b179055565b6002546001600160a01b031633146105715760405162461bcd60e51b81526004016103749061180a565b6001600160a01b03811660009081526004602052604090205460ff16156105aa5760405162461bcd60e51b815260040161037490611841565b6001600160a01b038116600090815260076020908152604090912084516105d3928601906113d6565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558352600682529091208351610624928501906113d6565b50600880546001600160401b031690600061063e83611870565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600460205260409020805460ff191660011790555050565b6008546060906001600160401b038088169116116106e75760405162461bcd60e51b815260206004820152601860248201527f7661756c743a64617461206b657973206f766572666c6f7700000000000000006044820152606401610374565b6003546000805460095460405192936001600160a01b03908116936301f8e06360e01b93610724939216918c918c918c918c918c916024016118a5565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161076291906117c0565b600060405180830381855afa9150503d806000811461079d576040519150601f19603f3d011682016040523d82523d6000602084013e6107a2565b606091505b50909150506001811515146107c95760405162461bcd60e51b8152600401610374906117dc565b6001600160401b0387166000908152600560209081526040808320546001600160a01b03168352600790915290208054610802906118ec565b80601f016020809104026020016040519081016040528092919081815260200182805461082e906118ec565b801561087b5780601f106108505761010080835404028352916020019161087b565b820191906000526020600020905b81548152906001019060200180831161085e57829003601f168201915b505050505091505095945050505050565b6008546060906001600160401b03908116908716106108aa57600080fd5b6003546000805460095460405192936001600160a01b0390811693631046f7f960e01b936108e7939216918c918c918c918c918c916024016118a5565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161092591906117c0565b600060405180830381855afa9150503d8060008114610960576040519150601f19603f3d011682016040523d82523d6000602084013e610965565b606091505b509091505060018115151461098c5760405162461bcd60e51b8152600401610374906117dc565b6001600160401b0387166000908152600560209081526040808320546001600160a01b03168352600690915290208054610802906118ec565b600354600080546009546040516060946001600160a01b0390811693633eeaa95360e01b93610a059391909216918c918c918c918c918c9160240161177f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610a4391906117c0565b600060405180830381855afa9150503d8060008114610a7e576040519150601f19603f3d011682016040523d82523d6000602084013e610a83565b606091505b5090915050600181151514610aaa5760405162461bcd60e51b8152600401610374906117dc565b6001600160a01b03871660009081526004602052604090205460ff161515600114610b0e5760405162461bcd60e51b81526020600482015260146024820152731d985d5b194e9b1858995b081b9bc8195e1a5cdd60621b6044820152606401610374565b6001600160a01b03871660009081526007602052604090208054610802906118ec565b6002546060906001600160a01b03163314610b5e5760405162461bcd60e51b81526004016103749061180a565b6001600160a01b03821660009081526004602052604090205460ff161515600114610bc25760405162461bcd60e51b81526020600482015260146024820152731d985d5b1d0e9b1858995b081b9bc8195e1a5cdd60621b6044820152606401610374565b6001600160a01b03821660009081526007602052604090208054610be5906118ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610c11906118ec565b8015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b505050505090505b919050565b6002546060906001600160a01b03163314610c985760405162461bcd60e51b81526004016103749061180a565b6008546001600160401b0390811690831610610cb357600080fd5b6001600160401b0382166000908152600560209081526040808320546001600160a01b03168352600690915290208054610be5906118ec565b6002546000906001600160a01b03163314610d195760405162461bcd60e51b81526004016103749061180a565b506001600160a01b031660009081526004602052604090205460ff1690565b6002546060906001600160a01b03163314610d655760405162461bcd60e51b81526004016103749061180a565b6008546001600160401b03808416911611610dc25760405162461bcd60e51b815260206004820152601a60248201527f7661756c743a6c6162656c73206b657973206f766572666c6f770000000000006044820152606401610374565b6001600160401b0382166000908152600560209081526040808320546001600160a01b03168352600790915290208054610be5906118ec565b600154604051638b1b925f60e01b81523260048201526001600160a01b0390911690638b1b925f906024016020604051808303816000875af1158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e699190611927565b1515600114610eb45760405162461bcd60e51b81526020600482015260176024820152767661756c743a2076616c696461746f7220756e7061737360481b6044820152606401610374565b6003546000805460095460405192936001600160a01b039081169363fe1770b160e01b93610ef5939216918d918d918d918d918d918d918d91602401611949565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610f3391906117c0565b600060405180830381855afa9150503d8060008114610f6e576040519150601f19603f3d011682016040523d82523d6000602084013e610f73565b606091505b5090915050600181151514610f9a5760405162461bcd60e51b8152600401610374906117dc565b6001600160a01b03861660009081526004602052604090205460ff1615610fd35760405162461bcd60e51b815260040161037490611841565b6001600160a01b03861660009081526007602090815260409091208951610ffc928b01906113d6565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b038b16908117909155835260068252909120885161104d928a01906113d6565b50600880546001600160401b031690600061106783611870565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039093166000908152600460205260409020805460ff191660011790555050505050565b600354600160a01b900460ff16156111075760405162461bcd60e51b81526020600482015260136024820152727661756c743a6d696e742068617320646f6e6560681b6044820152606401610374565b600154604051638b1b925f60e01b81523260048201526001600160a01b0390911690638b1b925f906024016020604051808303816000875af1158015611151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111759190611927565b15156001146111c05760405162461bcd60e51b81526020600482015260176024820152767661756c743a2076616c696461746f7220756e7061737360481b6044820152606401610374565b6003546000805460095460405192936001600160a01b039081169363f758a66560e01b93611201939216918d918d918d918d918d918d918d91602401611949565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161123f91906117c0565b600060405180830381855afa9150503d806000811461127a576040519150601f19603f3d011682016040523d82523d6000602084013e61127f565b606091505b50909150506001811515146112a65760405162461bcd60e51b8152600401610374906117dc565b6001600160a01b03861660009081526004602052604090205460ff16156112df5760405162461bcd60e51b815260040161037490611841565b6001600160a01b03861660009081526007602090815260409091208951611308928b01906113d6565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b038b169081179091558352600682529091208851611359928a01906113d6565b50600880546001600160401b031690600061137383611870565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039093166000908152600460205260409020805460ff1916600117905550506003805460ff60a01b1916600160a01b179055505050565b8280546113e2906118ec565b90600052602060002090601f016020900481019282611404576000855561144a565b82601f1061141d57805160ff191683800117855561144a565b8280016001018555821561144a579182015b8281111561144a57825182559160200191906001019061142f565b5061145692915061145a565b5090565b5b80821115611456576000815560010161145b565b80356001600160a01b0381168114610c6657600080fd5b803560ff81168114610c6657600080fd5b600080600080600060a086880312156114af57600080fd5b6114b88661146f565b9450602086013593506114cd60408701611486565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261150c57600080fd5b81356001600160401b0380821115611526576115266114e5565b604051601f8301601f19908116603f0116810190828211818310171561154e5761154e6114e5565b8160405283815286602085880101111561156757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561159c57600080fd5b83356001600160401b03808211156115b357600080fd5b6115bf878388016114fb565b945060208601359150808211156115d557600080fd5b506115e2868287016114fb565b9250506115f16040850161146f565b90509250925092565b80356001600160401b0381168114610c6657600080fd5b600080600080600060a0868803121561162957600080fd5b6114b8866115fa565b60005b8381101561164d578181015183820152602001611635565b8381111561165c576000848401525b50505050565b6000815180845261167a816020860160208601611632565b601f01601f19169290920160200192915050565b6020815260006116a16020830184611662565b9392505050565b6000602082840312156116ba57600080fd5b6116a18261146f565b6000602082840312156116d557600080fd5b6116a1826115fa565b600080600080600080600060e0888a0312156116f957600080fd5b87356001600160401b038082111561171057600080fd5b61171c8b838c016114fb565b985060208a013591508082111561173257600080fd5b5061173f8a828b016114fb565b96505061174e6040890161146f565b94506060880135935061176360808901611486565b925060a0880135915060c0880135905092959891949750929550565b6001600160a01b039788168152959096166020860152604085019390935260ff919091166060840152608083015260a082015260c081019190915260e00190565b600082516117d2818460208701611632565b9190910192915050565b6020808252601490820152733b30bab63a1d3232b632b3b0ba329022a92927a960611b604082015260600190565b60208082526017908201527f7661756c743a63616c6c657220697320696e76616c6964000000000000000000604082015260600190565b6020808252601590820152741d985d5b1d0e9b1858995b081a185cc8195e1a5cdd605a1b604082015260600190565b60006001600160401b038083168181141561189b57634e487b7160e01b600052601160045260246000fd5b6001019392505050565b6001600160a01b039790971687526001600160401b03959095166020870152604086019390935260ff919091166060850152608084015260a083015260c082015260e00190565b600181811c9082168061190057607f821691505b6020821081141561192157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561193957600080fd5b815180151581146116a157600080fd5b6001600160a01b038a811682526101206020830181905260009161196f8483018d611662565b91508382036040850152611983828c611662565b991660608401525050608081019590955260ff9390931660a085015260c084019190915260e083015261010090910152939250505056fea164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    _validator: string,
    _permissionLib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      _validator,
      _permissionLib,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    _validator: string,
    _permissionLib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _signer,
      _caller,
      _validator,
      _permissionLib,
      overrides || {}
    );
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
