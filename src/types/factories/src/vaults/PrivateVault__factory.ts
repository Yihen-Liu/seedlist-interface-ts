/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVault,
  PrivateVaultInterface,
} from "../../../src/vaults/PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_permissionLib",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getPrivateDataByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
    ],
    name: "getPrivateDataByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "labelIsExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelIsExistDirectly",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "saveWithoutMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_privateValidator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "updateValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ab738038062001ab78339810160408190526200003491620001a6565b604080518082018252601981527f707269766174655661756c7440736565646c6973742e6f7267000000000000006020918201528151808301835260058152640312e302e360dc1b9082015281517fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e818301527f524897c45a2b08b64fa5a5db0ba55d51bd9bba5ea1fb261f9101b9f6b46f193f818401527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600955600080546001600160a01b03199081166001600160a01b039687161790915560028054821694861694909417909355600180549093169184169190911790915560038054600880546001600160401b0319169055919092166001600160a81b031990911617905562000203565b80516001600160a01b0381168114620001a157600080fd5b919050565b60008060008060808587031215620001bd57600080fd5b620001c88562000189565b9350620001d86020860162000189565b9250620001e86040860162000189565b9150620001f86060860162000189565b905092959194509250565b6118a480620002136000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063541869ce11610097578063ad3d5e3811610066578063ad3d5e381461022a578063b5802dad1461023d578063c4dfc5ad14610250578063fc9c8d391461026357600080fd5b8063541869ce146101de5780635a724e27146101f1578063653045eb1461020457806373b26be31461021757600080fd5b80633644e515116100d35780633644e51514610180578063476862fc146101975780634a8bb379146101aa5780634f02c420146101ca57600080fd5b806301335ffd146101055780631c8ff5201461012d57806327513b70146101425780632ddbd13a14610155575b600080fd5b6101186101133660046112dd565b61028e565b60405190151581526020015b60405180910390f35b61014061013b366004611373565b610388565b005b610140610150366004611373565b610529565b600854610168906001600160401b031681565b6040516001600160401b039091168152602001610124565b61018960095481565b604051908152602001610124565b6101406101a53660046112dd565b610662565b6101bd6101b836600461140a565b610791565b6040516101249190611487565b60035461011890600160a01b900460ff1681565b6101406101ec366004611543565b610979565b6101bd6101ff36600461140a565b610cdd565b6101bd6102123660046112dd565b610e03565b6101bd610225366004611617565b610f5c565b6101bd610238366004611632565b611096565b61011861024b366004611617565b611117565b6101bd61025e366004611632565b611163565b600254610276906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b60035460008054600954604051929384936001600160a01b0391821693631c9febff60e21b936102cf93909116918c918c918c918c918c919060240161164d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161030d919061168e565b600060405180830381855afa9150503d8060008114610348576040519150601f19603f3d011682016040523d82523d6000602084013e61034d565b606091505b509091505060018115151461036157600080fd5b50506001600160a01b03851660009081526004602052604090205460ff1695945050505050565b6002546001600160a01b031633146103bb5760405162461bcd60e51b81526004016103b2906116aa565b60405180910390fd5b600354600160a01b900460ff16156104075760405162461bcd60e51b815260206004820152600f60248201526e7661756c743a6d696e7420646f6e6560881b60448201526064016103b2565b6001600160a01b03811660009081526004602052604090205460ff16156104405760405162461bcd60e51b81526004016103b2906116d8565b6001600160a01b038116600090815260076020526040902061046390868661121c565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558352600690915290206104b190848461121c565b50600880546001600160401b03169060006104cb83611703565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600460205260409020805460ff1916600117905550506003805460ff60a01b1916600160a01b1790555050565b6002546001600160a01b031633146105535760405162461bcd60e51b81526004016103b2906116aa565b6001600160a01b03811660009081526004602052604090205460ff161561058c5760405162461bcd60e51b81526004016103b2906116d8565b6001600160a01b03811660009081526007602052604090206105af90868661121c565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558352600690915290206105fd90848461121c565b50600880546001600160401b031690600061061783611703565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600460205260409020805460ff1916600117905550505050565b6003546000805460095460405192936001600160a01b0390811693630459e85b60e31b9361069f939216918b918b918b918b918b9160240161164d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516106dd919061168e565b600060405180830381855afa9150503d8060008114610718576040519150601f19603f3d011682016040523d82523d6000602084013e61071d565b606091505b50909150506001811515146107695760405162461bcd60e51b81526020600482015260126024820152713b30bab63a1d3ab83230ba329022b93937b960711b60448201526064016103b2565b5050600a80546001600160a01b0319166001600160a01b039590951694909417909355505050565b600354600080546009546040516060946001600160a01b03908116936301f8e06360e01b936107d19391909216918c918c918c918c918c91602401611738565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161080f919061168e565b600060405180830381855afa9150503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b509091505060018115151461086357600080fd5b6008546001600160401b038089169116116108b65760405162461bcd60e51b81526020600482015260136024820152727661756c743a6b657973206f766572666c6f7760681b60448201526064016103b2565b6001600160401b0387166000908152600560209081526040808320546001600160a01b031683526007909152902080546108ef9061177f565b80601f016020809104026020016040519081016040528092919081815260200182805461091b9061177f565b80156109685780601f1061093d57610100808354040283529160200191610968565b820191906000526020600020905b81548152906001019060200180831161094b57829003601f168201915b505050505091505095945050505050565b6001546040516301407ce760e31b81526001600160a01b0390911690630a03e738906109a9908490600401611487565b6020604051808303816000875af11580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec91906117ba565b1515600114610a3d5760405162461bcd60e51b815260206004820152601760248201527f7661756c743a2076616c696461746f7220756e7061737300000000000000000060448201526064016103b2565b600a546001600160a01b031615610acf57600a546040516301407ce760e31b81526001600160a01b0390911690630a03e73890610a7e908490600401611487565b6020604051808303816000875af1158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac191906117ba565b1515600114610acf57600080fd5b6000600360009054906101000a90046001600160a01b03166001600160a01b0316633b99fa8060e01b60008054906101000a90046001600160a01b03168d8d8d8d888e8e8e8e8e600954604051602401610b349c9b9a99989796959493929190611805565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b72919061168e565b600060405180830381855afa9150503d8060008114610bad576040519150601f19603f3d011682016040523d82523d6000602084013e610bb2565b606091505b5090915050600181151514610bc657600080fd5b6001600160a01b03871660009081526004602052604090205460ff1615610bff5760405162461bcd60e51b81526004016103b2906116d8565b6001600160a01b0387166000908152600760205260409020610c22908c8c61121c565b506008546001600160401b0316600090815260056020908152604080832080546001600160a01b0319166001600160a01b038c16908117909155835260069091529020610c70908a8a61121c565b50600880546001600160401b0316906000610c8a83611703565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039094166000908152600460205260409020805460ff191660011790555050505050505050565b600354600080546009546040516060946001600160a01b0390811693631046f7f960e01b93610d1d9391909216918c918c918c918c918c91602401611738565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610d5b919061168e565b600060405180830381855afa9150503d8060008114610d96576040519150601f19603f3d011682016040523d82523d6000602084013e610d9b565b606091505b5090915050600181151514610daf57600080fd5b6008546001600160401b0390811690881610610dca57600080fd5b6001600160401b0387166000908152600560209081526040808320546001600160a01b031683526006909152902080546108ef9061177f565b600354600080546009546040516060946001600160a01b0390811693633eeaa95360e01b93610e439391909216918c918c918c918c918c9160240161164d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610e81919061168e565b600060405180830381855afa9150503d8060008114610ebc576040519150601f19603f3d011682016040523d82523d6000602084013e610ec1565b606091505b5090915050600181151514610ed557600080fd5b6001600160a01b03871660009081526004602052604090205460ff161515600114610f395760405162461bcd60e51b81526020600482015260146024820152731d985d5b194e9b1858995b081b9bc8195e1a5cdd60621b60448201526064016103b2565b6001600160a01b038716600090815260076020526040902080546108ef9061177f565b6002546060906001600160a01b03163314610f895760405162461bcd60e51b81526004016103b2906116aa565b6001600160a01b03821660009081526004602052604090205460ff161515600114610fed5760405162461bcd60e51b81526020600482015260146024820152731d985d5b1d0e9b1858995b081b9bc8195e1a5cdd60621b60448201526064016103b2565b6001600160a01b038216600090815260076020526040902080546110109061177f565b80601f016020809104026020016040519081016040528092919081815260200182805461103c9061177f565b80156110895780601f1061105e57610100808354040283529160200191611089565b820191906000526020600020905b81548152906001019060200180831161106c57829003601f168201915b505050505090505b919050565b6002546060906001600160a01b031633146110c35760405162461bcd60e51b81526004016103b2906116aa565b6008546001600160401b03908116908316106110de57600080fd5b6001600160401b0382166000908152600560209081526040808320546001600160a01b031683526006909152902080546110109061177f565b6002546000906001600160a01b031633146111445760405162461bcd60e51b81526004016103b2906116aa565b506001600160a01b031660009081526004602052604090205460ff1690565b6002546060906001600160a01b031633146111905760405162461bcd60e51b81526004016103b2906116aa565b6008546001600160401b038084169116116111e35760405162461bcd60e51b81526020600482015260136024820152727661756c743a6b657973206f766572666c6f7760681b60448201526064016103b2565b6001600160401b0382166000908152600560209081526040808320546001600160a01b031683526007909152902080546110109061177f565b8280546112289061177f565b90600052602060002090601f01602090048101928261124a5760008555611290565b82601f106112635782800160ff19823516178555611290565b82800160010185558215611290579182015b82811115611290578235825591602001919060010190611275565b5061129c9291506112a0565b5090565b5b8082111561129c57600081556001016112a1565b80356001600160a01b038116811461109157600080fd5b803560ff8116811461109157600080fd5b600080600080600060a086880312156112f557600080fd5b6112fe866112b5565b945060208601359350611313604087016112cc565b94979396509394606081013594506080013592915050565b60008083601f84011261133d57600080fd5b5081356001600160401b0381111561135457600080fd5b60208301915083602082850101111561136c57600080fd5b9250929050565b60008060008060006060868803121561138b57600080fd5b85356001600160401b03808211156113a257600080fd5b6113ae89838a0161132b565b909750955060208801359150808211156113c757600080fd5b506113d48882890161132b565b90945092506113e79050604087016112b5565b90509295509295909350565b80356001600160401b038116811461109157600080fd5b600080600080600060a0868803121561142257600080fd5b6112fe866113f3565b60005b8381101561144657818101518382015260200161142e565b83811115611455576000848401525b50505050565b6000815180845261147381602086016020860161142b565b601f01601f19169290920160200192915050565b60208152600061149a602083018461145b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114c857600080fd5b81356001600160401b03808211156114e2576114e26114a1565b604051601f8301601f19908116603f0116810190828211818310171561150a5761150a6114a1565b8160405283815286602085880101111561152357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000806101008b8d03121561156357600080fd5b8a356001600160401b038082111561157a57600080fd5b6115868e838f0161132b565b909c509a5060208d013591508082111561159f57600080fd5b6115ab8e838f0161132b565b909a5098508891506115bf60408e016112b5565b975060608d013596506115d460808e016112cc565b955060a08d0135945060c08d0135935060e08d01359150808211156115f857600080fd5b506116058d828e016114b7565b9150509295989b9194979a5092959850565b60006020828403121561162957600080fd5b61149a826112b5565b60006020828403121561164457600080fd5b61149a826113f3565b6001600160a01b039788168152959096166020860152604085019390935260ff919091166060840152608083015260a082015260c081019190915260e00190565b600082516116a081846020870161142b565b9190910192915050565b6020808252601490820152731d985d5b1d0e98d85b1b195c881a5b9d985b1a5960621b604082015260600190565b6020808252601190820152701d985d5b1d0e9b1858995b08195e1a5cdd607a1b604082015260600190565b60006001600160401b038083168181141561172e57634e487b7160e01b600052601160045260246000fd5b6001019392505050565b6001600160a01b039790971687526001600160401b03959095166020870152604086019390935260ff919091166060850152608084015260a083015260c082015260e00190565b600181811c9082168061179357607f821691505b602082108114156117b457634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156117cc57600080fd5b8151801515811461149a57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038d1681526101406020820181905260009061182b9083018d8f6117dc565b828103604084015261183e818c8e6117dc565b90508281036060840152611852818b61145b565b6001600160a01b03999099166080840152505060a081019590955260ff9390931660c085015260e084019190915261010083015261012090910152969550505050505056fea164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    _validator: string,
    _permissionLib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      _validator,
      _permissionLib,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    _validator: string,
    _permissionLib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _signer,
      _caller,
      _validator,
      _permissionLib,
      overrides || {}
    );
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
