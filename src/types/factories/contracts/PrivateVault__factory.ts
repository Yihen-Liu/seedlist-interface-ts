/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PrivateVault,
  PrivateVaultInterface,
} from "../../contracts/PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "caller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getPrivateDataByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
    ],
    name: "getPrivateDataByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "labelIsExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelIsExistDirectly",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405265886c98b760006007553480156200001b57600080fd5b5060405162001a8d38038062001a8d8339810160408190526200003e916200018c565b604080518082018252601981527f707269766174655661756c7440736565646c6973742e6f7267000000000000006020918201528151808301835260058152640312e302e360dc1b9082015281517fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e818301527f524897c45a2b08b64fa5a5db0ba55d51bd9bba5ea1fb261f9101b9f6b46f193f818401527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600855600080546001600160a01b0319166001600160a01b0393841617905560018054600680546001600160401b0319169055919092166001600160a81b0319909116179055620001c4565b80516001600160a01b03811681146200018757600080fd5b919050565b60008060408385031215620001a057600080fd5b620001ab836200016f565b9150620001bb602084016200016f565b90509250929050565b6118b980620001d46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063653045eb11610097578063c4dfc5ad11610066578063c4dfc5ad1461022a578063d866517f1461023d578063f156b1bf14610250578063fc9c8d391461026357600080fd5b8063653045eb146101de57806373b26be3146101f1578063ad3d5e3814610204578063b5802dad1461021757600080fd5b80633644e515116100d35780633644e515146101805780634a8bb379146101975780634f02c420146101b75780635a724e27146101cb57600080fd5b806301335ffd146101055780631c8ff5201461012d57806327513b70146101425780632ddbd13a14610155575b600080fd5b6101186101133660046113c5565b61028e565b60405190151581526020015b60405180910390f35b61014061013b3660046114b5565b6102c3565b005b6101406101503660046114b5565b61047a565b600654610168906001600160401b031681565b6040516001600160401b039091168152602001610124565b61018960085481565b604051908152602001610124565b6101aa6101a536600461153f565b6105ba565b6040516101249190611590565b60015461011890600160a01b900460ff1681565b6101aa6101d936600461153f565b6106de565b6101aa6101ec3660046113c5565b610742565b6101aa6101ff3660046115c3565b6107d2565b6101aa6102123660046115e5565b610906565b6101186102253660046115c3565b610987565b6101aa6102383660046115e5565b6109d3565b61014061024b366004611600565b610a8d565b61014061025e366004611600565b610bb8565b600154610276906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b600061029d8686868686610d48565b506001600160a01b03851660009081526002602052604090205460ff1695945050505050565b6001546001600160a01b031633146102f65760405162461bcd60e51b81526004016102ed906116a1565b60405180910390fd5b600154600160a01b900460ff16156103505760405162461bcd60e51b815260206004820152601760248201527f736565646c6973743a206d696e742068617320646f6e6500000000000000000060448201526064016102ed565b6001600160a01b03811660009081526002602052604090205460ff16156103895760405162461bcd60e51b81526004016102ed906116cc565b6001600160a01b038116600090815260056020908152604090912084516103b292860190611304565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260048252909120835161040392850190611304565b50600680546001600160401b031690600061041d836116f5565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b1790555050565b6001546001600160a01b031633146104a45760405162461bcd60e51b81526004016102ed906116a1565b6001600160a01b03811660009081526002602052604090205460ff16156104dd5760405162461bcd60e51b81526004016102ed906116cc565b6001600160a01b0381166000908152600560209081526040909120845161050692860190611304565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260048252909120835161055792850190611304565b50600680546001600160401b0316906000610571836116f5565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6006546060906001600160401b0380881691161161060f5760405162461bcd60e51b815260206004820152601260248201527144617461206b657973206f766572666c6f7760701b60448201526064016102ed565b61061c8686868686610e11565b6001600160401b0386166000908152600360209081526040808320546001600160a01b031683526005909152902080546106559061172a565b80601f01602080910402602001604051908101604052809291908181526020018280546106819061172a565b80156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b5050505050905095945050505050565b6006546060906001600160401b03908116908716106106fc57600080fd5b6107098686868686610ed2565b6001600160401b0386166000908152600360209081526040808320546001600160a01b031683526004909152902080546106559061172a565b60606107518686868686610f93565b6001600160a01b03861660009081526002602052604090205460ff1615156001146107af5760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b60448201526064016102ed565b6001600160a01b038616600090815260056020526040902080546106559061172a565b6001546060906001600160a01b031633146107ff5760405162461bcd60e51b81526004016102ed906116a1565b6001600160a01b03821660009081526002602052604090205460ff16151560011461085d5760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b60448201526064016102ed565b6001600160a01b038216600090815260056020526040902080546108809061172a565b80601f01602080910402602001604051908101604052809291908181526020018280546108ac9061172a565b80156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b505050505090505b919050565b6001546060906001600160a01b031633146109335760405162461bcd60e51b81526004016102ed906116a1565b6006546001600160401b039081169083161061094e57600080fd5b6001600160401b0382166000908152600360209081526040808320546001600160a01b031683526004909152902080546108809061172a565b6001546000906001600160a01b031633146109b45760405162461bcd60e51b81526004016102ed906116a1565b506001600160a01b031660009081526002602052604090205460ff1690565b6001546060906001600160a01b03163314610a005760405162461bcd60e51b81526004016102ed906116a1565b6006546001600160401b03808416911611610a545760405162461bcd60e51b81526020600482015260146024820152734c6162656c73206b657973206f766572666c6f7760601b60448201526064016102ed565b6001600160401b0382166000908152600360209081526040808320546001600160a01b031683526005909152902080546108809061172a565b610a9c87878787878787611037565b6001600160a01b03851660009081526002602052604090205460ff1615610ad55760405162461bcd60e51b81526004016102ed906116cc565b6001600160a01b03851660009081526005602090815260409091208851610afe928a0190611304565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610b4f92890190611304565b50600680546001600160401b0316906000610b69836116f5565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff1916600117905550505050565b600154600160a01b900460ff1615610c095760405162461bcd60e51b81526020600482015260146024820152737661756c743a206d696e742068617320646f6e6560601b60448201526064016102ed565b610c1887878787878787611106565b6001600160a01b03851660009081526002602052604090205460ff1615610c515760405162461bcd60e51b81526004016102ed906116cc565b6001600160a01b03851660009081526005602090815260409091208851610c7a928a0190611304565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610ccb92890190611304565b50600680546001600160401b0316906000610ce5836116f5565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b17905550505050565b42841015610d685760405162461bcd60e51b81526004016102ed90611765565b60008054600854604051610daf926001600160a01b03169189918991907f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f90602001611795565b604051602081830303815290604052805190602001209050610e09818585856040518060400160405280601f81526020017f7661756c743a206c6162656c206578697374207065726d6974204552524f52008152506111ef565b505050505050565b42841015610e315760405162461bcd60e51b81526004016102ed90611765565b60008054600854604051610e78926001600160a01b03169189918991907f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d98906020016117d0565b604051602081830303815290604052805190602001209050610e09818585856040518060400160405280601f81526020017f7661756c743a20696e646578206c6162656c207065726d6974204552524f52008152506111ef565b42841015610ef25760405162461bcd60e51b81526004016102ed90611765565b60008054600854604051610f39926001600160a01b03169189918991907fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda7906020016117d0565b604051602081830303815290604052805190602001209050610e09818585856040518060400160405280601e81526020017f7661756c743a206c6162656c206e616d65207065726d6974204552524f5200008152506111ef565b42841015610fb35760405162461bcd60e51b81526004016102ed90611765565b60008054600854604051610ffa926001600160a01b03169189918991907f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d90602001611795565b604051602081830303815290604052805190602001209050610e0981858585604051806060016040528060248152602001611889602491396111ef565b428410156110575760405162461bcd60e51b81526004016102ed90611765565b600080546008546040516110a2926001600160a01b0316918b918b918b918b91907f6681e086fd2042ee88d7eb0f54dbe27796a216fb36f4e834a75b15d90b08272790602001611814565b6040516020818303038152906040528051906020012090506110fc818585856040518060400160405280601b81526020017f7661756c743a206d696e74696e67207065726d6974204552524f5200000000008152506111ef565b5050505050505050565b4284101561114e5760405162461bcd60e51b81526020600482015260156024820152741d985d5b1d0e995e1958dd5d19481d1a5b595bdd5d605a1b60448201526064016102ed565b60008054600854604051611199926001600160a01b0316918b918b918b918b91907f8774f567563ee2634c371978f5cfa8e41e5d255912344cb6b7d652f94c66c8a490602001611814565b6040516020818303038152906040528051906020012090506110fc818585856040518060400160405280601a81526020017f7661756c743a6d696e74696e67207065726d6974204552524f520000000000008152505b60008560405160200161120491815260200190565b60405160208183030381529060405280519060200120905060008160405160200161125b91907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051808303601f1901815282825280516020918201206000805490855291840180845281905260ff8a169284019290925260608301889052608083018790529092506001600160a01b03169060019060a0016020604051602081039080840390855afa1580156112d1573d6000803e3d6000fd5b505050602060405103516001600160a01b03161483906110fc5760405162461bcd60e51b81526004016102ed9190611590565b8280546113109061172a565b90600052602060002090601f0160209004810192826113325760008555611378565b82601f1061134b57805160ff1916838001178555611378565b82800160010185558215611378579182015b8281111561137857825182559160200191906001019061135d565b50611384929150611388565b5090565b5b808211156113845760008155600101611389565b80356001600160a01b038116811461090157600080fd5b803560ff8116811461090157600080fd5b600080600080600060a086880312156113dd57600080fd5b6113e68661139d565b9450602086013593506113fb604087016113b4565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261143a57600080fd5b81356001600160401b038082111561145457611454611413565b604051601f8301601f19908116603f0116810190828211818310171561147c5761147c611413565b8160405283815286602085880101111561149557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156114ca57600080fd5b83356001600160401b03808211156114e157600080fd5b6114ed87838801611429565b9450602086013591508082111561150357600080fd5b5061151086828701611429565b92505061151f6040850161139d565b90509250925092565b80356001600160401b038116811461090157600080fd5b600080600080600060a0868803121561155757600080fd5b6113e686611528565b60005b8381101561157b578181015183820152602001611563565b8381111561158a576000848401525b50505050565b60208152600082518060208401526115af816040850160208701611560565b601f01601f19169190910160400192915050565b6000602082840312156115d557600080fd5b6115de8261139d565b9392505050565b6000602082840312156115f757600080fd5b6115de82611528565b600080600080600080600060e0888a03121561161b57600080fd5b87356001600160401b038082111561163257600080fd5b61163e8b838c01611429565b985060208a013591508082111561165457600080fd5b506116618a828b01611429565b9650506116706040890161139d565b945060608801359350611685608089016113b4565b925060a0880135915060c0880135905092959891949750929550565b60208082526011908201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b604082015260600190565b6020808252600f908201526e131858995b081a185cc8195e1a5cdd608a1b604082015260600190565b60006001600160401b038083168181141561172057634e487b7160e01b600052601160045260246000fd5b6001019392505050565b600181811c9082168061173e57607f821691505b6020821081141561175f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601690820152751d985d5b1d0e88195e1958dd5d19481d1a5b595bdd5d60521b604082015260600190565b6bffffffffffffffffffffffff19606096871b811682529490951b909316601485015260288401919091526048830152606882015260880190565b60609590951b6bffffffffffffffffffffffff1916855260c09390931b6001600160c01b0319166014850152601c840191909152603c830152605c820152607c0190565b60006bffffffffffffffffffffffff19808a60601b168352885161183f816014860160208d01611560565b885190840190611856816014840160208d01611560565b60609890981b91909116960160148101969096525050602884019290925260488301526068820152608801939250505056fe7661756c743a206765742064617461206279206e616d65207065726d6974204552524f52a164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
